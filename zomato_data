 private cart:Cart =new Cart();

      private cartSub: BehaviorSubject<Cart> = new BehaviorSubject(this.cart);
   

      constructor() { }

      addToCart(food:Food):void
      {
           let cartItem  =  this.cart.items.find(item => item.food.id === food.id);
         
             if(cartItem)
                return;

             this.cart.items.push(new CartItem(food));
      }

       removeFromCart(fid :number):void{
            
            this.cart.items= this.cart.items.filter( item => item.food.id != fid);
       }

        changeQuantity(fid: number, quantity:number){
              
          let cartItem = this.cart.items.find(item => item.food.id === fid);

          if(!cartItem)
             return;

              cartItem.quantity= quantity;
              cartItem.price  =   quantity   *  cartItem.food.price;

        }

        clearCart(){
             this.cart= new Cart(); 
        }

       //getting cart observable
        getCartObservable():Observable<Cart>
        {
              return this.cartSub.asObservable();

        }
